services:
  user:
    build:
      context: ./user
      dockerfile: Dockerfile
    networks:
      - user-postgres-n
      - awesome
    depends_on:
      - user-postgres

  location:
    build:
      context: ./location
      dockerfile: Dockerfile
    networks:
      - awesome
      - location-postgres-n
    depends_on:
      - location-postgres

  weather:
    build:
      context: ./weather
      dockerfile: Dockerfile
    networks:
      - awesome
    depends_on:
      - redis
    ports:
      - "9090:9090"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379

  user-location:
    build:
      context: ./user-location
      dockerfile: Dockerfile
    networks:
      - awesome
      - user_location-postgres-n
    depends_on:
      - user_location-postgres

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8080"
    networks:
      - awesome

  user-postgres:
    image: postgres
    container_name: "user-postgres"
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345678
      - POSTGRES_DB=users
    networks:
      - user-postgres-n
    volumes:
      - user_service_postgres:/var/lib/postgresql/data

  location-postgres:
    image: postgres
    container_name: "location-postgres"
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345678
      - POSTGRES_DB=locations
    networks:
      - location-postgres-n
    volumes:
      - location_service_postgres:/var/lib/postgresql/data

  user_location-postgres:
    image: postgres
    container_name: "user_location-postgres"
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345678
      - POSTGRES_DB=user_locations
    networks:
      - user_location-postgres-n
    volumes:
      - user_location_service_postgres:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: weather_redis
    ports:
      - "6379:6379"
    networks:
      - awesome
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]

volumes:
  user_service_postgres:

  user_location_service_postgres:

  location_service_postgres:

  redis-data:

networks:
  user-postgres-n:
    driver: bridge
  user_location-postgres-n:
    driver: bridge
  location-postgres-n:
    driver: bridge
  awesome:
    driver: bridge